name: 'Version Release GitHub Action'
description: 'Create release of uploaded artifacts with version tagging'
branding:
  icon: 'upload-cloud'
  color: 'blue'

inputs:
  release-version:
    description: 'Release version'
    required: false
    default: ''
  download-name:
    description: 'Name of the artifacts to download'
    required: false
  download-pattern:
    description: 'Name pattern of the artifacts to download'
    required: false
  merge-multiple:
    description: 'Merge multiple artifacts into one directory?'
    required: false
    default: 'true'
  create-latest:
    description: 'Should create latest tag?'
    required: false
    default: 'true'

runs:
  using: 'composite'
  steps:
    - name: Set up environment
      id: set-env
      shell: bash
      run: |
        VERSION_REGEX="^[0-9]+\.[0-9]+\.[0-9]+$"
        if [[ "${{ inputs.release-version }}" =~ $VERSION_REGEX ]]; then
          echo "VERSION=${{ inputs.release-version }}" >> $GITHUB_ENV
        elif [[ "${GITHUB_REF#refs/tags/v}" =~ $VERSION_REGEX ]]; then
          echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
        else
          echo "Error: Invalid version"
          exit 1
        fi
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.download-name }}
        pattern: ${{ inputs.download-pattern }}
        merge-multiple: ${{ inputs.merge-multiple }}
        path: ${{ github.workspace }}/artifacts
    - name: Display structure of downloaded files
      shell: bash
      run: ls -R ${{ github.workspace }}/artifacts
    - if: ${{ inputs.create-latest == 'true' }}
      name: Tag latest
      shell: bash
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

        git tag -fa latest -m "Latest release"
        git push origin :refs/tags/latest
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Move version tag
      shell: bash
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

        VERSION_TAG="v$VERSION"
        git tag -fa ${VERSION_TAG} -m "Release ${VERSION_TAG}"
        git push origin :refs/tags/${VERSION_TAG}

        git push origin --tags
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - if: ${{ inputs.create-latest == 'true' }}
      name: Release latest tag
      uses: softprops/action-gh-release@v2
      with:
        tag_name: latest
        generate_release_notes: true
        files: |
          ${{ github.workspace }}/artifacts/*
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Release version tag
      uses: softprops/action-gh-release@v2
      with:
        generate_release_notes: true
        files: |
          ${{ github.workspace }}/artifacts/*
      env:
        GITHUB_TOKEN: ${{ github.token }}
